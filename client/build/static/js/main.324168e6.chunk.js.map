{"version":3,"sources":["utils/auth.js","utils/reducers.js","utils/actions.js","utils/GlobalState.js","utils/queries.js","components/Header/index.js","components/Footer/index.js","components/Toggle.js","components/ChangeTheme.js","utils/mutations.js","pages/Login.js","pages/NoMatch.js","components/CommentList/index.js","components/CommentForm/index.js","pages/SinglePost.js","components/ProfilePostList/index.js","components/FollowerList/index.js","pages/Profile.js","pages/Signup.js","components/MainFeed/index.js","pages/Home.js","pages/WritePost.js","App.js","serviceWorker.js","index.js","resources/PenNameGraphicLight.svg"],"names":["decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","reducer","state","action","type","navActive","loggedinUser","feedToggle","StoreContext","createContext","Provider","StoreProvider","value","initialState","props","logedinUser","useReducer","dispatch","console","log","QUERY_POSTS","gql","QUERY_POST","QUERY_USER","QUERY_ME","QUERY_ME_BASIC","Header","userData","useQuery","data","useContext","logout","event","preventDefault","Auth","toggleNav","className","role","aria-label","to","src","require","onClick","id","aria-expanded","data-target","aria-hidden","loggedIn","me","username","Footer","Toggle","checked","onChange","htmlFor","ChangeTheme","darkMode","useDarkMode","disable","toggle","enable","LOGIN_USER","ADD_USER","ADD_FOLLOWER","ADD_POST","ADD_COMMENT","Login","useState","email","password","formState","setFormState","useMutation","login","handleChange","target","name","handleFormSubmit","a","variables","error","onSubmit","placeholder","NoMatch","CommentList","comments","style","marginTop","border","backgroundColor","color","borderBottom","map","comment","key","_id","commentBody","fontWeight","createdAt","CommentForm","postId","setBody","characterCount","setCharacterCount","addComment","length","rows","SinglePost","useParams","loading","post","title","postText","commentCount","ProfilePostList","posts","icon","faFeatherAlt","size","alt","FollowerList","followerCount","followers","follower","Profile","addFollower","userParam","editing","setValue","user","getProfile","max","handleClick","viewContainerClassName","inputProps","saveButtonContent","cancelButtonContent","editButtonContent","onSave","faEnvelope","href","faBookReader","Signup","aboutText","addUser","Feed","viewFollowing","setViewFollowing","followingUsers","push","sortByFollowing","array","sorted","forEach","e","sort","filter","preSort","joinFollowPosts","outPut","el","sortedByFollowing","Home","PostForm","update","cache","addPost","readQuery","query","writeQuery","document","replace","client","ApolloClient","request","operation","setContext","headers","authorization","uri","App","exact","path","component","WritePost","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.324168e6.chunk.js","sourcesContent":["import decode from 'jwt-decode';\n\nclass AuthService {\n    // retrieve data saved in token\n    getProfile() {\n      return decode(this.getToken());\n    }\n  \n    // check if the user is still logged in\n    loggedIn() {\n      // Checks if there is a saved token and it's still valid\n      const token = this.getToken();\n      // use type coersion to check if token is NOT undefined and the token is NOT expired\n      return !!token && !this.isTokenExpired(token);\n    }\n  \n    // check if the token has expired\n    isTokenExpired(token) {\n      try {\n        const decoded = decode(token);\n        if (decoded.exp < Date.now() / 1000) {\n          return true;\n        } else {\n          return false;\n        }\n      } catch (err) {\n        return false;\n      }\n    }\n  \n    // retrieve token from localStorage\n    getToken() {\n      // Retrieves the user token from localStorage\n      return localStorage.getItem('id_token');\n    }\n  \n    // set token to localStorage and reload page to homepage\n    login(idToken) {\n      // Saves user token to localStorage\n      localStorage.setItem('id_token', idToken);\n  \n      window.location.assign('/');\n    }\n  \n    // clear token from localStorage and force logout with reload\n    logout() {\n      // Clear user token and profile data from localStorage\n      localStorage.removeItem('id_token');\n      // this will reload the page and reset the state of the application\n      window.location.assign('/');\n    }\n  }\n\nexport default new AuthService();\n","import { useReducer} from 'react';\n\nimport {TOGGLE_NAV, CURRENT_USER, FEED_TOGGLE} from \"./actions\";\n\nexport const reducer = (state, action ) => {\n    switch(action.type) {\n        case TOGGLE_NAV:\n            return{\n                ...state,\n                navActive: !state.navActive\n            };\n        case CURRENT_USER:\n            return{\n                ...state,\n                loggedinUser: action.loggedinUser\n            };\n        case FEED_TOGGLE:\n            return{\n              ...state,\n              feedToggle: action.feedToggle\n            }\n            default:\n                return state;\n    }\n};\n\nexport function useProductReducer(initialState) {\n          return useReducer(reducer, initialState);\n      }","export const TOGGLE_NAV = 'TOGGLE_NAV';\nexport const CURRENT_USER = 'CURRENT_USER';\nexport const FEED_TOGGLE = 'FEED_TOGGLE';","import React, {createContext, useContext} from \"react\";\nimport {useProductReducer} from './reducers';\n\nconst StoreContext = createContext();\nconst {Provider} = StoreContext;\n\nconst StoreProvider = ({value = [], ...props}) => {\n    const [state, dispatch] = useProductReducer({\n        feedToggle: '',\n        logedinUser:'',\n        navActive: false\n    });\n    console.log(state);\n    return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useStoreContext = () => {\n    return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };","import gql from 'graphql-tag';\n\nexport const QUERY_POSTS = gql`\n  query posts($username: String) {\n    posts(username: $username) {\n      _id\n      title\n      postText\n      createdAt\n      username\n      commentCount\n      comments {\n        _id\n        createdAt\n        username\n        commentBody\n      }\n    }\n  }\n`;\n\nexport const QUERY_POST = gql`\n  query post($id: ID!) {\n    post(_id: $id) {\n      _id\n      title\n      postText\n      createdAt\n      username\n      commentCount\n      comments {\n        _id\n        createdAt\n        username\n        commentBody\n      }\n    }\n  }\n`;\n\nexport const QUERY_USER = gql`\n  query user($username: String!) {\n    user(username: $username) {\n      _id\n      username\n      email\n      aboutText\n      followerCount\n      followers {\n        _id\n        username\n      }\n      posts {\n        _id\n        title\n        postText\n        createdAt\n        commentCount\n      }\n    }\n  }\n`;\n\nexport const QUERY_ME = gql`\n  {\n    me {\n      _id\n      username\n      email\n      aboutText\n      followerCount\n      posts {\n        _id\n        title\n        postText\n        createdAt\n        commentCount\n        comments {\n          _id\n          createdAt\n          commentBody\n          username\n        }\n      }\n      followers {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const QUERY_ME_BASIC = gql`\n  {\n    me {\n      _id\n      username\n      email\n      followerCount\n      followers {\n        _id\n        username\n      }\n    }\n  }\n`;","import React,{useEffect} from 'react';\nimport {TOGGLE_NAV} from '../../utils/actions';\nimport Auth from '../../utils/auth';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport {QUERY_ME_BASIC} from '../../utils/queries';\nimport { useQuery } from '@apollo/react-hooks';\n\nimport { Link } from 'react-router-dom';\n\nconst Header = () => {\n\n  const { data:userData } = useQuery(QUERY_ME_BASIC);\n  console.log(userData)\n\n  const [state, dispatch] = useStoreContext();\n\n  const logout = event => {\n    event.preventDefault();\n    Auth.logout();\n  };\n\n  \n function toggleNav() {\n    dispatch({type: TOGGLE_NAV});\n}\n \n      \n  \n if (!state.navActive){\n    return(\n      <>\n      {Auth.loggedIn() ? (\n      <nav className=\"navbar  is-fixed-top\" role=\"navigation\" aria-label=\"main navigation\">\n      <div className=\"navbar-brand\" >\n        <Link to=\"/\" className=\"logo\">\n        <img className=\"graphic\"src={require(\"../../resources/PenNameGraphicLight.svg\")}></img>\n          {/* <h1 className=\"main-title\">Pen Name</h1>*/ }\n          </Link>\n        \n          <a role=\"button\" onClick={toggleNav} className=\"navbar-burger burger\" id=\"\" aria-label=\"menu\" aria-expanded=\"false\" data-target=\"navMenu\">\n        <span aria-hidden=\"true\"></span>\n        <span aria-hidden=\"true\"></span>\n        <span aria-hidden=\"true\"></span>\n      </a>\n       </div>\n       <div id=\"navMenu\" className=\"navbar-menu\"> \n        <div className=\"navbar-start\">\n          \n            \n            \n            <Link className=\"navbar-item\" to=\"/profile\" >Profile</Link>\n            <Link className=\"navbar-item\" to=\"/write\" >Write</Link>\n            <Link className=\"navbar-item\" to=\"/\" onClick={logout}>\n             Logout\n            </Link>\n            </div>\n            <div className=\"navbar-end\">\n            {userData?(\n              <span className=\"navbar-item\">Logged in as {userData.me.username}</span>\n            ):(<span></span>)}\n            \n            </div>\n            </div>\n          </nav> \n          ):( \n            <nav className=\"navbar  is-fixed-top\" role=\"navigation\" aria-label=\"main navigation\">\n            <div className=\"navbar-brand\" >\n              <Link to=\"/\" className=\"logo\">\n              <img className=\"graphic\"src={require(\"../../resources/PenNameGraphicLight.svg\")}></img>\n                {/* <h1 className=\"main-title\">Pen Name</h1>*/ }\n                </Link>\n              \n                <a role=\"button\" onClick={toggleNav} className=\"navbar-burger burger\" id=\"\" aria-label=\"menu\" aria-expanded=\"false\" data-target=\"navMenu\">\n              <span aria-hidden=\"true\"></span>\n              <span aria-hidden=\"true\"></span>\n              <span aria-hidden=\"true\"></span>\n            </a>\n             </div>\n             <div id=\"navMenu\" className=\"navbar-menu\"> \n              <div className=\"navbar-start\">\n            <Link  className=\"navbar-item\" to=\"/login\" >Login</Link>\n            <Link  className=\"navbar-item\" to=\"/signup\" >Signup</Link>\n         \n        </div>\n        <div className=\"navbar-end\"></div>\n        </div>\n      </nav>\n      )} \n      </>\n      )\n      \n    } else {\n      \n    return (\n      <nav className=\"navbar is-transparent is-fixed-top\" role=\"navigation\" aria-label=\"main navigation\">\n      <div className=\"navbar-brand\">\n        <Link to=\"/\" className=\"\">\n        <img className=\"graphic\"src={require(\"../../resources/PenNameGraphicLight.svg\")}></img>\n        </Link>\n        \n        <a role=\"button\" onClick={toggleNav} className=\"navbar-burger burger is-active\" id=\"\" aria-label=\"menu\" aria-expanded=\"false\" data-target=\"navMenu\">\n      <span aria-hidden=\"true\"></span>\n      <span aria-hidden=\"true\"></span>\n      <span aria-hidden=\"true\"></span>\n    </a>\n     </div>\n    \n  \n       <div id=\"navMenu\" className=\"navbar-menu is-active \"> \n        <div className=\"navbar-start\">\n          \n          {Auth.loggedIn()? (\n            <>\n            \n            <Link className=\"navbar-item\" to=\"/profile\" onClick={toggleNav}>Profile</Link>\n            <Link className=\"navbar-item\" to=\"/write\" onClick={toggleNav}>Write</Link>\n            <Link className=\"navbar-item\" to=\"/\" onClick={logout}>\n             Logout\n            </Link>\n            <div className=\"navbar-end\">\n            {userData.me?(\n              <span className=\"navbar-item\">Logged in as {userData.me.username}</span>\n            ):(<span></span>)}\n            </div>\n            </>\n            \n          ):(  <>\n            <Link  className=\"navbar-item\" to=\"/login\" onClick={toggleNav}>Login</Link>\n            <Link  className=\"navbar-item\" to=\"/signup\" onClick={toggleNav}>Signup</Link>\n          </>)}\n        </div>\n        <div className=\"navbar-end\"></div>\n        </div>\n  \n         \n  \n        </nav>\n       ) \n        \n        \n    \n   }\n  };\n  \n  export default Header;\n\n\n\n\n  /*\n  import React,{useEffect} from 'react';\nimport {TOGGLE_NAV} from '../../utils/actions';\nimport Auth from '../../utils/auth';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport {QUERY_ME_BASIC} from '../../utils/queries';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Link } from 'react-router-dom';\nconst Header = () => {\n  const { data:userData } = useQuery(QUERY_ME_BASIC);\n  console.log(userData)\n  const [state, dispatch] = useStoreContext();\n  const logout = event => {\n    event.preventDefault();\n    Auth.logout();\n  };\n  \n  function toggleNav() {\n    dispatch({type: TOGGLE_NAV});\n}\n \n      \n  \n  if (!state.navActive){\n    return(\n      <nav className=\"navbar is-transparent is-fixed-top\" role=\"navigation\" aria-label=\"main navigation\">\n      <div className=\"navbar-brand\">\n        <Link to=\"/\" className=\"\">\n        <img className=\"graphic\"src={require(\"../../resources/PenNameGraphic.svg\")}></img>\n          {// <h1 className=\"main-title\">Pen Name</h1> //}\n          </Link>\n        \n          <a role=\"button\" onClick={toggleNav} className=\"navbar-burger\" id=\"stick\" aria-label=\"menu\" aria-expanded=\"false\" >\n        <span aria-hidden=\"true\"></span>\n        <span aria-hidden=\"true\"></span>\n        <span aria-hidden=\"true\"></span>\n      </a>\n       </div>\n       \n      </nav>\n      )\n    } else {\n      \n    return (\n      <nav className=\"navbar is-transparent is-fixed-top\" role=\"navigation\" aria-label=\"main navigation\">\n      <div className=\"navbar-brand\">\n        <Link to=\"/\" className=\"navbar-item\">\n        <img className=\"graphic\"src={require(\"../../resources/PenNameGraphic.svg\")}></img>\n        </Link>\n        \n        <a role=\"button\" onClick={toggleNav} className=\"navbar-burger is-active\" id=\"stick\" aria-label=\"menu\" aria-expanded=\"false\" >\n      <span aria-hidden=\"true\"></span>\n      <span aria-hidden=\"true\"></span>\n      <span aria-hidden=\"true\"></span>\n    </a>\n     </div>\n    \n  \n       <div className=\"navbar-menu is-active \"> \n        <div className=\"navbar-start\">\n          {Auth.loggedIn() ? (\n            <>\n            <span>Logged in as {userData.me.username}</span>\n            <Link className=\"navbar-item\" to=\"/profile\" onClick={toggleNav}>Profile</Link>\n            <Link className=\"navbar-item\" to=\"/write\" onClick={toggleNav}>Write</Link>\n            <Link className=\"navbar-item\" to=\"/\" onClick={logout}>\n             Logout\n            </Link>\n            </>\n          ):(  <>\n            <Link  className=\"navbar-item\" to=\"/login\" onClick={toggleNav}>Login</Link>\n            <Link  className=\"navbar-item\" to=\"/signup\" onClick={toggleNav}>Signup</Link>\n          </>)}\n        </div>\n        <div className=\"navbar-end\"></div>\n        </div>\n  \n         \n  \n        </nav>\n       ) \n        \n        \n    \n   }\n  };\n  \n  export default Header;*/","import React from 'react';\nconst Footer = () => {\n  return (\n    <footer className=\"has-text-centered\">\n      <div className=\"container\">&copy;2020 by Group 2</div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\n\nconst Toggle = ({ checked, onChange }) => (\n  <span className=\"toggle-control\">\n    <input\n      className=\"dmcheck\"\n      type=\"checkbox\"\n      checked={checked}\n      onChange={onChange}\n      id=\"dmcheck\"\n    />\n    <label htmlFor=\"dmcheck\" />\n  </span>\n);\n\nexport default Toggle;\n","import React from 'react';\n\nimport Toggle from './Toggle';\nimport useDarkMode from 'use-dark-mode';\n\nconst ChangeTheme = () => {\n  const darkMode = useDarkMode(false);\n\n  return (\n    <div className=\"dark-mode-toggle\">\n      <button className=\"toggle-icons\" type=\"button\" onClick={darkMode.disable}>\n        ☀\n      </button>\n      <Toggle checked={darkMode.value} onChange={darkMode.toggle} />\n      <button className=\"toggle-icons\"  type=\"button\" onClick={darkMode.enable}>\n        ☾\n      </button>\n    </div>\n  );\n};\n\nexport default ChangeTheme;","import gql from 'graphql-tag';\n\nexport const LOGIN_USER = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser($username: String!, $email: String!, $password: String!) {\n    addUser(username: $username, email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_FOLLOWER = gql`\n  mutation addFollower($id: ID!) {\n    addFollower(followerId: $id) {\n      _id\n      username\n      followerCount\n      followers {\n        _id\n        username\n      }\n    }\n  }\n`;\nexport const ADD_ABOUT = gql`\nmutation addAbout($aboutText:String){\n  addAbout(aboutText: $aboutText){\n    _id\n    username\n    aboutText\n  }\n}`;\n\nexport const ADD_POST = gql`\n  mutation addPost($title:String, $postText: String!) {\n    addPost( title: $title, postText: $postText) {\n      _id\n      title\n      postText\n      createdAt\n      username\n      commentCount\n      comments {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_COMMENT = gql`\n  mutation addComment($postId: ID!, $commentBody: String!) {\n    addComment(postId: $postId, commentBody: $commentBody) {\n      _id\n      commentCount\n      comments {\n        _id\n        commentBody\n        createdAt\n        username\n      }\n    }\n  }\n`;\n","import React, { useState } from 'react';\n\nimport Auth from '../utils/auth';\n\nimport { useMutation } from '@apollo/react-hooks';\nimport { LOGIN_USER } from '../utils/mutations';\n\nconst Login = (props) => {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  \n\n  const [login] = useMutation(LOGIN_USER);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n      \n     \n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      const { data } = await login({\n        variables: { ...formState }\n      });\n    \n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n<section className=\"section level\">\n<div className=\"container level-item\">\n  \n<form onSubmit={handleFormSubmit}>\n<div className=\"field\">\n  <p className=\"control has-icons-left has-icons-right\">\n    <input className=\"input\"\n                placeholder='Your email'\n                name='email'\n                type='email'\n                id='email'\n                value={formState.email}\n                onChange={handleChange} />\n  <span className=\"icon is-small is-left\">\n    <i className=\"fas fa-envelope\"></i>\n  </span>\n  <span className=\"icon is-small is-right\">\n    <i className=\"fas fa-check\"></i>\n  </span>\n  </p>\n</div>\n<div className=\"field\">\n<p className=\"control has-icons-left\">\n  <input className=\"input\" placeholder='******'\n              name='password'\n              type='password'\n              id='password'\n              value={formState.password}\n              onChange={handleChange} />\n  <span className=\"icon is-small is-left\">\n    <i className=\"fas fa-lock\"></i>\n  </span>\n</p>\n</div>\n\n<button className='button is-centered' type='submit'>\n            Submit\n</button>\n\n </form>\n</div>\n</section>\n );\n};\n\nexport default Login;\n","import React from 'react';\n\nconst NoMatch = () => {\n  return (\n    <div>\n      Oops, we couldn't find that page.\n    </div>\n  );\n};\n\nexport default NoMatch;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst CommentList = ({ comments }) => {\n  return (\n    <div>\n        <div style={{ marginTop:'10px', border: '1px solid #F2E9E4' }}>\n            <div className='card' style={{ backgroundColor:'#8C7D8A' }}> \n                <p className='title has-text-centered' style={{ color:'#D0B8B3', borderBottom:'5px double #22223B75' }}>\n                    Comments\n                </p>\n                <div className='card-content'>\n                    {comments &&\n                    comments.map(comment => (\n                    <div className=\"has-text-centered\" key={comment._id} style={{ color:'#D0B8B3' }}>\n                        <p style={{ color:'#F2E9E4' }}>\n                            {comment.commentBody}\n                        </p>\n                        <Link to={`/profile/${comment.username}`} style={{ fontWeight: 700, color:'#22223B' }}>\n                        {comment.username} \n                        </Link> on {comment.createdAt}\n                    </div>\n                    ))}\n                </div>\n            </div>   \n        </div>\n    </div>\n\n  );\n};\n\nexport default CommentList;","import React, { useState } from 'react';\nimport { ADD_COMMENT } from '../../utils/mutations';\nimport { useMutation } from '@apollo/react-hooks';\n\n\n\nconst CommentForm = ({ postId }) => {\n\n    const [commentBody, setBody] = useState('');\n    const [characterCount, setCharacterCount] = useState(0);\n    \n    const [addComment, { error }] = useMutation(ADD_COMMENT);\n\n    const handleChange = event => {\n        if (event.target.value.length <= 280) {\n     setBody(event.target.value);\n        setCharacterCount(event.target.value.length);\n    }\n        };\n\n        const handleFormSubmit = async event => {\n            event.preventDefault();\n          \n            try {\n              await addComment({\n                variables: { commentBody, postId }\n              });\n          \n              // clear form value\n              setBody('');\n              setCharacterCount(0);\n            } catch (e) {\n              console.error(e);\n            }\n          };\n\n  return (\n    <div>\n      <p className={`${characterCount === 280 }`}>\n        Character Count: {characterCount}/280\n        {error && <span className=\"ml-2\">Something went wrong...</span>}\n      </p>\n      <form\n        className=\"\"\n        onSubmit={handleFormSubmit}\n      >\n        <textarea\n          placeholder=\"Leave a comment on this post...\"\n          value={commentBody}\n          className=\"textarea is-medium\"\n          onChange={handleChange}\n          rows=\"3\"\n        ></textarea>\n\n        <button className='button is-normal' type=\"submit\" style={{ marginTop:'5px' }}>\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default CommentForm;","import React from 'react';\n\nimport Auth from '../utils/auth';\n\nimport { useParams, Link } from 'react-router-dom';\n\nimport { useQuery } from '@apollo/react-hooks';\nimport { QUERY_POST } from '../utils/queries';\n\nimport CommentList from '../components/CommentList';\nimport CommentForm from '../components/CommentForm';\n\nconst SinglePost = props => {\n\n  const { id: postId } = useParams();\n\n  const { loading, data } = useQuery(QUERY_POST, {\n    variables: { id: postId }\n  });\n\n  const post = data?.post || {};\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n\n    <div>\n      <div style={{ marginTop:'25px'}}>\n        <div className='card'>\n          <p className='title has-text-centered'>\n            <Link className=\"single-post-user\" to={`/profile/${post.username}`}>{post.username}</Link>\n          </p>\n          <p className='subtitle has-text-centered single-post-subtitle' style={{ color:'#F2E9E4' }}>\n            posted on {post.createdAt}\n          </p>\n          \n          <div className='card-content'>\n            <p  className=\"title\">{post.title}</p>\n            <p >{post.postText}</p>\n          </div>\n        </div>\n      </div>\n      <div style={{ marginTop: '10px' }}>\n        {post.commentCount > 0 && <CommentList comments={post.comments} />}\n        {Auth.loggedIn() && <CommentForm postId={post._id} />}\n      </div>\n    </div>\n\n    \n  );\n};\n\nexport default SinglePost;\n","import React from 'react';\nimport { faFeatherAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Link } from 'react-router-dom';\n\nconst ProfilePostList = ({ posts, title }) => {\n  if (!posts.length) {\n    return <h3>No Posts Yet</h3>;\n  }\n console.log(posts)\n  return (\n    <section className=\"section\">\n      <div className=\"container py-4\">\n        <h3 className=\"title has-text-left mb-3\" style={{ color: '#D0B8B3' }}>{title}</h3>\n        <div className=\"mb-6\" >\n        \n        {posts &&\n          posts.map(post => (\n          <div key={post._id} className=\"box\">\n            <div className=\"media\">\n              <figure className=\"media-left\">\n                <p className=\"\">\n                <FontAwesomeIcon icon={faFeatherAlt} size=\"lg\" alt=\"icon\" style={{ color: '#D0B8B3' }}/>\n                </p>\n              </figure>\n              <div className=\"media-content\">\n          <h3 className=\"title is-3 post-title\" >{post.title}</h3>\n                  <p className=\"subtitle is-size-6\">\n                    <Link\n                      to={`/profile/${post.username}`}\n                    >\n                      {post.username}\n                    </Link>{' '}\n                    posted on {post.createdAt}\n                  </p>\n                <div className=\"content\">\n                  <Link to={`/post/${post._id}`}>\n                    <p className=\"has-text-weight-normal is-size-5 \">{post.postText}</p>\n                    <p className=\"mb-0 comments\">\n                    Comments: {post.commentCount} || Click to{' '}\n                      {post.commentCount ? 'see' : 'start'} the discussion!\n                    </p>\n                  </Link>\n                </div>\n              </div>\n            </div>\n          </div>\n        ))}\n        </div>\n        \n    </div>\n    </section>\n  );\n};\n\nexport default ProfilePostList;\n\n\n// import React from 'react';\n\n// import { Link } from 'react-router-dom';\n\n// const ProfilePostList = ({ posts, title }) => {\n//   if (!posts.length) {\n//     return <h3>No Posts Yet</h3>;\n//   }\n\n//   return (\n//     <div className=\"\">\n//       <h3>{title}</h3>\n//       <div className=\"tile is-ancestor\" >\n//       <div class=\"tile is-vertical\">\n//       {posts &&\n//         posts.map(post => (\n//           <div key={post._id} className=\"tile is-parent\">\n//           <article className=\"tile is-child notification\"  style={{backgroundColor:'#8C7D8A'}}>\n//           <p className=\"title\">Title</p>\n//             <p className=\"subtitle\">\n//               <Link\n//                 to={`/profile/${post.username}`}\n//                 style={{ fontWeight: 700 }}\n//                 className=\"text-light\"\n//               >\n//                 {post.username}\n//               </Link>{' '}\n//               posted on {post.createdAt}\n//             </p>\n//             <div className=\"content\">\n//               <Link to={`/post/${post._id}`}>\n//                 <p>{post.postText}</p>\n//                 <p className=\"mb-0\">\n//                 Comments: {post.commentCount} || Click to{' '}\n//                   {post.commentCount ? 'see' : 'start'} the discussion!\n//                 </p>\n//               </Link>\n              \n//               </div>\n\n//             </article>\n//           </div>\n\n//         ))}\n//         </div>\n//         </div>\n//     </div>\n//   );\n// };\n\n// export default ProfilePostList;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst FollowerList = ({ followerCount, username, followers }) => {\n  if (!followers || !followers.length) {\n    return <p className=\"bg-dark text-light p-3\">{username}, follow some writers!</p>;\n  }\n\n  return (\n    <div className=\"following\">\n      <h5 className=\"title is-5 mb-2 followcount\" >\n        {username} is following {followerCount} {followerCount === 1 ? 'writer' : 'writers'}\n      </h5>\n      {followers.map(follower => (\n        <button className=\"button is-fullwidth is-inverted is-outlined mb-2\" key={follower._id}>\n          <Link  className=\"following\" to={`/profile/${follower.username}`}>{follower.username} </Link>\n        </button>\n      ))}\n    </div>\n  );\n};\n\nexport default FollowerList;","import React,{useState, Component} from 'react';\nimport { Redirect, useParams } from 'react-router-dom'; //Redirect,\nimport ProfilePostList from '../components/ProfilePostList';\nimport { useQuery, useMutation} from '@apollo/react-hooks';\nimport { QUERY_USER,QUERY_ME} from '../utils/queries';\nimport { ADD_FOLLOWER,ADD_ABOUT} from '../utils/mutations';\nimport FollowerList from '../components/FollowerList';\n// import PostForm from '../components/PostForm';\nimport Auth from '../utils/auth';\nimport { faEnvelope } from \"@fortawesome/free-solid-svg-icons\";\nimport { faBookReader } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport EdiText from 'react-editext';\n\nconst Profile = () => {\n  \n  const [addFollower] = useMutation(ADD_FOLLOWER);\n  const {username: userParam} = useParams();\n  const { loading, data} = useQuery( userParam ? QUERY_USER : QUERY_ME, {\n    variables: {username: userParam}\n  });\n\n  //modal handler ////////////////////////////////////////////////\n \n  \n  //edit text example\n  const [editing] = useState(false);\n  const [value, setValue] = useState(\"This is a sample text.\");\n\n  const handleSave = value => {\n    console.log('Edited Value -> ', value);\n    setValue(value);\n  };\n  //\n\n \n  ////////////////////////////////////////////////////////////////\n  \n  const user = data?.me||data?.user || {};\n  \n  \n//   // redirect to personal profile page if username is the logged-in user's\n//if (Auth.loggedIn() && Auth.getProfile().data.username.toLowerCase() === userParam.toLowerCase()) {\nif (Auth.loggedIn() && Auth.getProfile().data.username === userParam) {\n  return <Redirect to=\"/profile\" />;\n}\n\n  if(loading) {\n    return <progress className=\"progress is-medium is-dark\" max=\"100\">Loading</progress>\n  }\n  if (!user?.username) {\n    return (\n      <h4>\n        You need to be logged in to see this page. Use the navigation links above to sign up or log in!\n      </h4>\n    );\n  }\n\n  const handleClick = async () => {\n    try{\n      await addFollower({\n        variables: {id:user._id}\n      });\n    } catch (e) {\n      console.error(e)\n    }\n  };\n\n  return (\n    <div>\n    <section className=\"section\">\n      <div className=\"container py-4\">\n        \n          <h2 className=\"title has-text-centered mb-6\" style={{ color: '#D0B8B3' }}>\n          Viewing {userParam ? `${user.username}'s`: 'your'} profile\n         </h2>\n    \n        \n      <div className=\"columns\">\n        <div className=\"column is-6\">\n        <h4 className=\"title is-spaced is-4\" style={{ color: '#D0B8B3' }}>\n          About {userParam ? `${user.username}`: 'me'}\n          </h4>\n\n          <div className=\"subtitle about\">\n            {/*  Apply your changes below */}\n            <EdiText\n            viewContainerClassName='about-wrapper'\n            type='textarea'\n            inputProps={{\n              rows: 5\n            }}\n            saveButtonContent={<strong>Apply</strong>}\n            cancelButtonContent={<strong>Cancel</strong>}\n            editButtonContent='Edit About Section'\n            value=\"I'm baby master cleanse poutine scenester actually paleo butcher pork belly truffaut fixie. Whatever unicorn squid pug skateboard lomo. Enamel pin 3 wolf moon you probably haven't heard of them sriracha. Authentic brunch affogato post-ironic man braid.\"\n              editing={editing}\n              onSave={handleSave}\n            />\n      </div>\n      \n        \n        <div>\n\n          <div className=\"media\">\n            <div className=\"media-left\"><figure className=\"\"><FontAwesomeIcon icon={faEnvelope} size=\"lg\" alt=\"Email\" style={{ color: '#D0B8B3'}}/></figure></div>\n              <div className=\"media-content\">\n                <div className=\"content\">\n                  \n                  <a href={`mailto:${user.email}`} className=\"email\">{user.email}</a>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      \n      <div className=\"column is-5 is-offset-1 follow\">\n      {userParam && (\n        <button className=\"button is-inverted is-outlined mb-5\" onClick={handleClick}>\n          <span className=\" pr-3\"><FontAwesomeIcon icon={faBookReader} size=\"\" alt=\"Follow\"></FontAwesomeIcon></span>\n          <span>Follow</span>\n       </button>\n       )}\n      <div className=\"col-12 col-lg-3 mb-1\">\n          <FollowerList\n            username={user.username}\n            followerCount={user.followerCount}\n            followers={user.followers}\n          />\n          {/* <form action=\"/charge\" method=\"POST\">\n            <script\n              src=\"https://checkout.stripe.com/checkout.js\" class=\"stripe-button\"\n              data-key=\"{{stripePublishableKey}}\"\n              data-amount=\"1000\"\n              data-name=\"Hire Writer\"\n              data-description=\"Personal Writer\"\n              data-image=\"/img/marketplace.png\"\n              data-locale=\"auto\">\n            </script>\n            <script>\n              document.getElementsByClassName('stripe-button-el')[0].style.display = 'none';\n            </script>\n            <button type=\"submit\" className='button is-normal'>Hire For $10</button>\n          </form> */}\n          \n          </div>\n\n      </div>\n      </div>\n      </div>\n      </section>\n      <div className=\"flex-row justify-space-between mb-3\">\n        <div className=\"col-12 mb-3 col-lg-8\" >\n          <ProfilePostList posts={user.posts} title={`${user.username}'s posts`}/>\n        </div>\n\n        \n      </div>\n      \n\n    </div>\n    \n\n  );\n};\n\nexport default Profile;\n\n\n\n\n/*const Profile = () => {\n  \n  const [addFollower] = useMutation(ADD_FOLLOWER);\n  const {username: userParam} = useParams();\n  const { loading, data} = useQuery( userParam ? QUERY_USER : QUERY_ME, {\n    variables: {username: userParam}\n  });\n\n  //modal handler ////////////////////////////////////////////////\n  // const [formState, setFormState] = useState({ aboutText:''});\n  const [modalOpen, setModalOpen] = useState()\n  const [aboutText,setText] = useState('')\n  const [addAbout, { error }] = useMutation(ADD_ABOUT) \n  \n\n  const handleChange = event => {\n   \n    setText(event.target.value)\n    console.log(aboutText);\n   \n    // setFormState({\n    //   ...formState,\n    //   [name]: value,\n    // });\n    // console.log(formState)\n  };\n\n  const handleAboutFormSubmit = async event => {\n    event.preventDefault();\n     \n    try {\n      \n        await addAbout({\n        variables:aboutText\n      });\n    } catch (e) {\n      console.error(e);\n    }\n    setModalOpen(false)\n    console.log(aboutText)\n    console.log(data)\n  };\n  ////////////////////////////////////////////////////////////////\n  \n  const user = data?.me||data?.user || {};\n  \n  \n//   // redirect to personal profile page if username is the logged-in user's\n//if (Auth.loggedIn() && Auth.getProfile().data.username.toLowerCase() === userParam.toLowerCase()) {\nif (Auth.loggedIn() && Auth.getProfile().data.username === userParam) {\n  return <Redirect to=\"/profile\" />;\n}\n\n  if(loading) {\n    return <progress className=\"progress is-medium is-dark\" max=\"100\">Loading</progress>\n  }\n  if (!user?.username) {\n    return (\n      <h4>\n        You need to be logged in to see this page. Use the navigation links above to sign up or log in!\n      </h4>\n    );\n  }\n\n  const handleClick = async () => {\n    try{\n      await addFollower({\n        variables: {id:user._id}\n      });\n    } catch (e) {\n      console.error(e)\n    }\n  };\n\n  return (\n    <div>\n    <section className=\"section\">\n      <div className=\"container py-4\">\n        \n          <h2 className=\"title has-text-centered mb-6\" style={{ color: '#D0B8B3' }}>\n          Viewing {userParam ? `${user.username}'s`: 'your'} profile\n         </h2>\n    \n        \n      <div className=\"columns\">\n        <div className=\"column is-6\">\n         {!user.aboutText? (\n            <h4 className=\"title is-spaced is-4\" style={{ color: '#D0B8B3' }}>\n            {/* About{userParam ? ` ${user.username}`: ' me'}\n            <section>\n           {userParam ? <p></p> : <button className=\"button\" onClick={() => setModalOpen(true)}>Add About</button>}\n           </section> //}\n           </h4>\n           \n           ):(\n             <>\n            <h4 className=\"title is-spaced is-4\" style={{ color: '#D0B8B3' }}>\n            About {userParam ? ` ${user.username}`: ' me'}\n            </h4>\n            \n            <p className=\"subtitle\">{user.aboutText}</p> \n            {!userParam? <p></p> :\n             <button className=\"button\" onClick={() => setModalOpen(true)}>Edit About</button> }\n             </>\n           )\n          }\n           \n          \n          <div>\n  \n            <div className=\"media\">\n              <div className=\"media-left\"><figure className=\"\"><FontAwesomeIcon icon={faEnvelope} size=\"lg\" alt=\"Email\" style={{ color: '#D0B8B3'}}/></figure></div>\n                <div className=\"media-content\">\n                  <div className=\"content\">\n                    \n                    <a href={`mailto:${user.email}`} className=\"email\">{user.email}</a>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        \n        <div className=\"column is-5 is-offset-1 follow\">\n        {userParam && (\n          <button className=\"button is-inverted is-outlined mb-5\" onClick={handleClick}>\n            <span className=\" pr-3\"><FontAwesomeIcon icon={faBookReader} size=\"\" alt=\"Follow\"></FontAwesomeIcon></span>\n            <span>Follow</span>\n         </button>\n         )}\n        <div className=\"col-12 col-lg-3 mb-1\">\n            <FollowerList\n              username={user.username}\n              followerCount={user.followerCount}\n              followers={user.followers}\n            />\n            {// <form action=\"/charge\" method=\"POST\">\n              <script\n                src=\"https://checkout.stripe.com/checkout.js\" class=\"stripe-button\"\n                data-key=\"{{stripePublishableKey}}\"\n                data-amount=\"1000\"\n                data-name=\"Hire Writer\"\n                data-description=\"Personal Writer\"\n                data-image=\"/img/marketplace.png\"\n                data-locale=\"auto\">\n              </script>\n              <script>\n                document.getElementsByClassName('stripe-button-el')[0].style.display = 'none';\n              </script>\n              <button type=\"submit\" className='button is-normal'>Hire For $10</button>\n            </form> //}\n            \n            </div>\n  \n        </div>\n        </div>\n        </div>\n        </section>\n        <div className=\"flex-row justify-space-between mb-3\">\n          <div className=\"col-12 mb-3 col-lg-8\" >\n            <ProfilePostList posts={user.posts} title={`${user.username}'s posts`}/>\n          </div>\n  \n          \n        </div>\n        {// about text modal //}\n        <div className={`modal ${modalOpen && 'is-active'}`}>\n           <div className=\"modal-background\"></div>\n             <div className=\"modal-card\">\n               <header className=\"modal-card-head\">\n                    <p className=\"modal-card-title\">Edit About</p>\n                    \n                     </header>\n                      <form className=\"modal-card-body\" onSubmit={handleAboutFormSubmit}>\n                      <textarea\n                        className=\"textarea\" \n                        rows=\"10\"\n                        name=\"aboutText\"\n                        value={aboutText}\n                        onChange={handleChange}\n                        >About text</textarea>\n                        <button className=\"button is-success\" type=\"submit\">Save changes</button>\n                    </form>\n                   <footer className=\"modal-card-foot\">\n                   \n                 <button className=\"button\" onClick={() => setModalOpen(false)} >Cancel</button>\n                 </footer>\n           </div>\n       </div>\n  \n      </div>\n      \n  \n    );\n  };\n  \n  export default Profile;*/","import React, { useState } from 'react';\n\nimport Auth from '../utils/auth';\n\nimport { useMutation } from '@apollo/react-hooks';\nimport { ADD_USER } from '../utils/mutations';\n\nconst Signup = () => {\n  const [formState, setFormState] = useState({ username: '', email: '', password: '' ,aboutText:''});\n\n  const [addUser] = useMutation(ADD_USER);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form (notice the async!)\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n\n    // use try/catch instead of promises to handle errors\n    try {\n      const { data } = await addUser({\n        variables: { ...formState }\n      });\n    \n      Auth.login(data.addUser.token);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return( \n    \n\n<section className=\"section level\">\n<div className=\"container level-item\">\n  \n<form onSubmit={handleFormSubmit}>\n<div className=\"field\">  \n  <p className=\"control has-icons-left has-icons-right\">\n  <input        className='input'\n                placeholder='Your username'\n                name='username'\n                type='username'\n                id='username'\n                value={formState.username}\n                onChange={handleChange}\n              />\n        <span className=\"icon is-small is-left\">\n             <i className=\"fas fa-envelope\"></i>\n         </span>\n           <span className=\"icon is-small is-right\">\n            <i className=\"fas fa-check\"></i>\n          </span>\n      </p>\n</div>\n<div className=\"field\">  \n  <p className=\"control has-icons-left has-icons-right\">\n    <input      className=\"input\"\n                placeholder='Your email'\n                name='email'\n                type='email'\n                id='email'\n                value={formState.email}\n                onChange={handleChange} />\n        <span className=\"icon is-small is-left\">\n             <i className=\"fas fa-envelope\"></i>\n         </span>\n           <span className=\"icon is-small is-right\">\n            <i className=\"fas fa-check\"></i>\n          </span>\n      </p>\n</div>\n<div className=\"field\">\n<p className=\"control has-icons-left\">\n  <input      className=\"input\"\n              placeholder='******'\n              name='password'\n              type='password'\n              id='password'\n              value={formState.password}\n              onChange={handleChange} />\n                    <span className=\"icon is-small is-left\">\n                   <i className=\"fas fa-lock\"></i>\n               </span>\n            </p>\n   </div>\n          <button className='button is-centered' type='submit'>\n            Submit\n   </button>\n </form>\n</div>\n</section>\n\n  );\n};\n\nexport default Signup;\n","import React, {useState} from 'react';\n// import { useParams } from 'react-router-dom'; //Redirect,\nimport { Link } from 'react-router-dom';\n// import { useQuery} from '@apollo/react-hooks';\n// import {QUERY_ME_BASIC,QUERY_POSTS} from '../../utils/queries';\nimport Auth from '../../utils/auth'\n\nconst Feed = ({ posts,userData}) => {\n  \n  const [viewFollowing, setViewFollowing] = useState(false);\n  var followingUsers =[]\n\n \n\n\n \n  if (!posts.length) {\n    return <h3>No Posts Yet</h3>;\n  }\n\nif(!viewFollowing) {\n  return (\n    <div className=\"container\">\n\n<div className=\"tabs is-centered\">\n      <ul>\n        <li className= 'is-active'><a onClick={() => setViewFollowing(false)}>View All</a></li>\n        {Auth.loggedIn() ? (\n        <li className=''><a onClick={() => setViewFollowing(true)}>View Following</a></li>\n        ):(<li>log in to view followed posts</li>)}\n        </ul>\n    \n    </div>\n      {posts &&\n        posts.map(post => (\n          <section className=\"section\">\n          <div key={post._id} className=\"card\">\n            <p className=\"card-header\">\n        <Link className=\"post-title\" to={`/post/${post._id}`}>{post.title}</Link>\n              \n            </p>\n            <div className=\"card-content\">\n\n              <Link to={`/post/${post._id}`}>\n                <p className=\"post-text\">{post.postText}</p>\n                <span className=\"post-comments\">\n                Comments: {post.commentCount} || Click to{' '}\n                  {post.commentCount ? 'see' : 'start'} the discussion!\n                </span>\n              </Link>\n            </div>\n           \n            <footer className=\"card-footer\">\n              <div className=\"tags has-addons\">\n              <span className=\"tag \">\n                Author:\n              <Link\n                to={`/profile/${post.username}`}\n                style={{ fontWeight: 700 }}\n                \n              >  {post.username}\n               </Link><br/>\n               </span>\n               <span className=\"tag is-light\">\n             {' '}\n             {post.createdAt}\n              </span>\n              </div>\n             \n\n            </footer>\n          </div>\n          </section>\n        ))}\n    </div>);\n        } else  {\n            \n          userData.me.followers.map( follower => followingUsers.push(follower.username))\n  console.log(followingUsers)\n \n  const sortByFollowing = (array) => {\n    \n    const sorted = []\n    array.forEach(e => {\n      let sort = posts.filter(post => post.username == e)\n      sorted.push(sort)\n    });\n\n     return sorted\n   \n  }\n  console.log(sortByFollowing(followingUsers))\n  const preSort = sortByFollowing(followingUsers)\n\n  const joinFollowPosts = (array) => {\n    const outPut = []\n    array.forEach(e => {\n      e.forEach(el => {\n        outPut.push(el)\n      })\n    })\n    return outPut\n  }\n  //  console.log(joinFollowPosts(preSort))\nconst sortedByFollowing=(joinFollowPosts(preSort))\nconsole.log(sortedByFollowing);\n\n          return (\n            <div className=\"container\">\n        \n        <div className=\"tabs is-centered\">\n              <ul>\n                <li className=''><a onClick={()=>setViewFollowing(false)}>View All</a></li>\n                <li className='is-active'><a onClick={()=>setViewFollowing(true)}>View Following</a></li>\n                </ul>\n            \n            </div>\n              {\n              joinFollowPosts(preSort).map(post => (\n                  <section className=\"section\">\n                  <div key={post._id} className=\"card\">\n                    <p className=\"card-header\">\n                <Link className=\"post-title\" to={`/post/${post._id}`}>{post.title}</Link>\n                      \n                    </p>\n                    <div className=\"card-content\">\n        \n                      <Link to={`/post/${post._id}`}>\n                        <p className=\"post-text\">{post.postText}</p>\n                        <p className=\"post-comments\">\n                        Comments: {post.commentCount} || Click to{' '}\n                          {post.commentCount ? 'see' : 'start'} the discussion!\n                        </p>\n                      </Link>\n                    </div>\n                   \n                    <footer className=\"card-footer\">\n                    <div className=\"tags has-addons\">\n                      <span className=\"tag \">\n                      Author:\n                      <Link\n                       to={`/profile/${post.username}`}\n                       style={{ fontWeight: 700 }}>\n                \n                   {post.username}\n                   </Link><br/>\n                   </span>\n                   <span className=\"tag is-light\">\n                   {' '}\n                   {post.createdAt}\n                  </span>\n                  </div>\n             \n\n                   </footer>\n                  </div>\n                  </section>\n                ))}\n            </div>);\n        }\n  \n};\n\nexport default Feed;\n","import React from 'react';\nimport { QUERY_POSTS, QUERY_ME_BASIC } from '../utils/queries';\nimport { useQuery } from '@apollo/react-hooks';\n// import Auth from '../utils/auth';\nimport Feed from '../components/MainFeed';\n// import PostForm from '../components/PostForm';\n// import FollowerList from '../components/FollowerList';\n\n\nconst Home = () => {\n  // use useQuery hook to make query request\n  const { loading, data } = useQuery(QUERY_POSTS);\n\n  // use object destructuring to extract `data` from the `useQuery` Hook's response and rename it `userData` to be more descriptive\n const { data: userData } = useQuery(QUERY_ME_BASIC);\n  // const followers= userData?.me.followers\n  const posts = data?.posts || [];\n  \n  console.log(userData)\n  // console.log(posts);\n \n\n  // const loggedIn = Auth.loggedIn();\n\n  return (\n    \n  <main id=\"home-body\">\n      <div className=\"flex-row justify-space-between\">\n      {/* {loggedIn && (\n          <div className=\"col-12 mb-3\">\n            <PostForm />\n          </div>\n        )} */}\n       \n  {loading ? (\n    <progress className=\"progress is-medium is-dark\" max=\"100\">Loading</progress>\n  ) : (\n   \n    <Feed \n    posts={posts} \n   userData={userData}\n    />\n    \n  )}\n</div>\n{/* {loggedIn && userData ? (\n \n    <FollowerList\n      username={userData.me.username}\n      followerCount={userData.me.followerCount}\n      followers={userData.me.followers}\n    />\n\n) : null}\n     */}\n    </main>\n  );\n};\n\nexport default Home;\n","import React, { useState } from 'react';\n\nimport { useMutation } from '@apollo/react-hooks';\nimport { ADD_POST } from '../utils/mutations';\n\n\nimport { QUERY_POSTS, QUERY_ME } from '../utils/queries';\n\nconst PostForm = () => {\n  \n  // const [postText, setText] = useState('');\n  const [formState, setFormState] = useState({ title: '', postText: ''});\n  const [characterCount, setCharacterCount] = useState(0);\n  const [addPost, { error }] = useMutation(ADD_POST, {\n    update(cache, { data: { addPost } }) {\n      try {\n        // could potentially not exist yet, so wrap in a try...catch\n        const { posts } = cache.readQuery({ query: QUERY_POSTS });\n        cache.writeQuery({\n          query: QUERY_POSTS,\n          data: { posts: [addPost, ...posts] }\n        });\n       \n      } catch (e) {\n        console.error(e);\n      }\n\n      const { me } = cache.readQuery({ query: QUERY_ME });\n      cache.writeQuery({\n        query: QUERY_ME,\n        data: { me: { ...me, posts: [...me.posts, addPost] } }\n      });\n    }\n  });\n\n  const handleChange = event => {\n    // if (event.target.value.length <= 1000) {\n    \n    //   setText(event.target.value);\n  setCharacterCount(event.target.value.length);\n   \n    // }\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n  \n    try {\n        const { data } = await addPost({\n        variables: { ...formState}\n      });\n      document.location.replace('/')\n      console.log(data)\n     setFormState('')\n    //   setText('');\n    //   setCharacterCount(0);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <div>\n      <p className={`m-0 ${characterCount === 1000 || error ? 'text-danger' : ''}`}>\n        Character Count: {characterCount}/1000\n        {error && <span className=\"ml-2\">Something went wrong...</span>}\n      </p>\n      <form\n        className=\"flex-row justify-center justify-space-between-md align-stretch\"\n        onSubmit={handleFormSubmit}\n      >\n          <input className=\"input field\" \n          name=\"title\"\n          type=\"text\"\n          placeholder=\"Title\"\n           value={formState.title}\n           onChange={handleChange}\n          ></input>\n        <textarea\n          placeholder=\"Body...\"\n          value={formState.postText}\n          type=\"text\"\n          name=\"postText\"\n          className=\"textarea field\"\n          rows=\"17\"\n          onChange={handleChange}\n        ></textarea>\n        <button className=\"button\" type=\"submit\" >\n           Finalize you work\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default PostForm;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n// add these two library import statements\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport ApolloClient from 'apollo-boost';\nimport './sass/styles.scss';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport ChangeTheme from './components/ChangeTheme';\nimport Login from './pages/Login';\nimport NoMatch from './pages/NoMatch';\nimport SinglePost from './pages/SinglePost';\nimport Profile from './pages/Profile';\nimport Signup from './pages/Signup';\nimport {StoreProvider} from './utils/GlobalState';\nimport Home from './pages/Home';\nimport WritePost from './pages/WritePost'\n\nconst client = new ApolloClient({\n  request: operation => {\n    const token = localStorage.getItem('id_token');\n\n    operation.setContext({\n      headers: {\n        authorization: token ? `Bearer ${token}` : ''\n      }\n    });\n  },\n  uri: '/graphql'\n});\n\nconst App = () => {\n  return (\n    \n    <ApolloProvider client={client}>\n      <Router>\n        <StoreProvider>\n          \n        <div className=\"main\">\n          <Header />\n          \n          <div className=\"container\">\n            <div className=\"container toggle\">\n            <ChangeTheme />\n            </div>\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/signup\" component={Signup} />\n              <Route exact path=\"/profile/:username?\" component={Profile} />\n              <Route exact path=\"/post/:id\" component={SinglePost} />\n              <Route exact path=\"/write\" component={WritePost}/>\n\n              <Route component={NoMatch} />\n            </Switch>\n          </div>\n          <Footer />\n        </div>\n        </StoreProvider>\n      </Router>\n    </ApolloProvider>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/PenNameGraphicLight.090d4ebc.svg\";"],"sourceRoot":""}